@use 'variables' as *;
@use 'sass:color';

// Flexbox mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Responsive mixins
@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Typography mixins
@mixin heading-1 {
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1.2;
}

@mixin heading-2 {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1.2;
}

@mixin heading-3 {
  font-size: 1.75rem;
  font-weight: 600;
  line-height: 1.3;
}

@mixin heading-4 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.3;
}

// Button mixins
@mixin button-base {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $border-width solid transparent;
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-base;
  line-height: $line-height-base;
  border-radius: $border-radius;
  transition: all 0.15s ease-in-out;
  cursor: pointer;
  
  &:focus, &:hover {
    text-decoration: none;
    outline: 0;
  }
}

@mixin button-variant($background, $border, $hover-background, $hover-border, $color: white) {
  background-color: $background;
  border-color: $border;
  color: $color;
  
  &:hover, &:focus {
    background-color: $hover-background;
    border-color: $hover-border;
  }
}

// Shadow mixins
@mixin shadow-sm {
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

@mixin shadow {
  box-shadow: $box-shadow;
}

@mixin shadow-lg {
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
}
